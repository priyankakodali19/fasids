@model WebApplication3.Models.ViewModel.ProductDataView2
@{
    ViewBag.Title = "ProductIndex";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.4.8/angular.min.js"></script>
<style>
    ul {
        padding-left: 15%;
    }

   
</style>
<script type="text/javascript">
    $('document').ready(function () {
        if ('@(TempData["Value"])' == 1) {
            $('#product_sucess').toggle();
        }
    });
</script>
@*<div class="divide30"></div>*@
<div >
    <div id="product_sucess" style="float: left; padding: 0.5%; margin-bottom:1%!important; display:none;" class="alert alert-success fade in" >
        <a href="#" class="close" data-dismiss="alert">&times;</a>
        <strong>Success!</strong> New product is added!.
    </div>
    <btn style="float:right; margin-bottom:1%;" id="AddProduct" input type="submit" class="btn btn-theme-bg" onclick="AddProduct">Add Product </btn>
</div>
<div ng-app="productManagerApp" ng-controller="productDefaultCtrl">
<div>
    <table data-toggle="table" class="table table-striped table-bordered table-condensed table-hover">
        <thead id="ProductsThead">
            <tr>
                <th data-field="ProductName" data-sortable="true"><div>Product</div><div>Name</div> </th>
                <th data-field="ActiveIngredient" data-sortable="true"><div>Active</div><div>Ingredient</div> </th>
                <th data-field="ProductManufacturer" data-sortable="true"><div>Product</div><div>Manufacturer</div></th>
                <th data-field="PhysicalForm" data-sortable="false"><div>Physical</div><div>Form</div> </th>
                <th data-field="IsSynthetic" data-sortable="false"><div>Synthetic</div><div>or Natural</div> </th>
                <th data-field="TypeOfControlUsage" data-sortable="false"><div>Control</div><div>Method</div> </th>
                <th data-field="TypeOfTreatmentUsage" data-sortable="false"><div>Treatment</div><div> Method</div> </th>
                <th data-field="TypeOfLand" data-sortable="false"><div>Type of Land</div></th>
                <th data-field="TypeOfTreatmentSite" data-sortable="false"><div>Treatment Sites</div></th>
                <th data-field="ProductCoverage" data-sortable="false"><div>Suggested Product</div><div>Use Rate</div></th>
                <th data-field="ModifyProduct" data-sortable="false"><div>Modify</div><div>Product</div></th>
                
            </tr>
        </thead>
        <tbody>
    @foreach (var i in Model.Products)
            {
   
                <tr>
                    <td><a href=@Html.DisplayFor(m => i.ProductUrl) target="_blank"> @Html.DisplayFor(m => i.ProductName)</a></td>
                    <td> @Html.DisplayFor(m => i.ActiveIngredient)</td>
                    <td> @Html.DisplayFor(m => i.ProductManufacturer)</td>
                    <td> @Html.DisplayFor(m => i.PhysicalForm)</td>
                    <td> @Html.DisplayFor(m => i.IsSynthetic)</td>
                    <td> @Html.DisplayFor(m => i.ProductControlMethod)</td>
                    <td>
                        <ul>
                            @for (int x = 0; x < i.ProductTreatmentMethod.Count; x++)
                            {
                                <li>@Html.DisplayFor(m => i.ProductTreatmentMethod[x])</li>
                            }
                        </ul>
                    </td>
                    <td> 
                        @if(i.TypeOfLand2.Count==2)
                        {
                            <ul>
                                @for (int x = 0; x < i.TypeOfLand2.Count; x++)
                                {
                                    <li>@Html.DisplayFor(m => i.TypeOfLand2[x])</li>
                                }
                            </ul>
                        }
                        else
                        {
                            @Html.DisplayFor(m => i.TypeOfLand)
                        }
                    </td>
                    <td>
                        <ul>
                            @for (int x = 0; x < i.TreatmentSites.Count;x++  )
                            {
                                <li>@Html.DisplayFor(m => i.TreatmentSites[x])</li>
                            }
                        </ul>
                    </td>
                    <td>
                        <ul>
                            @for (int x = 0; x < i.ProductMeasurementUnit2.Count; x++)
                            {
                                <li>@Html.DisplayFor(m => i.ProductMeasurementUnit2[x])</li>
                            }
                        </ul>   
                    </td>
                    <td>
                         @{
                             int product_id = i.ProductId;
                             var ProductName = i.ProductName;
                            var ActiveIngredient= i.ActiveIngredient;
                            var ProductManufacturer=i.ProductManufacturer;
                             var ProductUrl=i.ProductUrl;
                            var PhysicalForm = i.PhysicalForm;
                             var IsSynthetic = i.IsSynthetic;
                            var PesticideClassification= "UnRestricted";
                            var TypeOfLand2 = "";
                            var TypeOfLand = "";
                           var  ProductTreatmentMethod = "";
                            if (i.TypeOfLand2.Count == 2)
                            {
                                TypeOfLand2 = "Urban, Agriculture";
                            }
                            else
                            {
                                TypeOfLand = i.TypeOfLand;
                                
                            }
                            if (i.ProductTreatmentMethod.Count == 2)
                            {
                                ProductTreatmentMethod = "BroadcastMound";
                            }
                            else
                            {
                                ProductTreatmentMethod = i.ProductTreatmentMethod.ToString();
                            }
                            var TreatmentSites= i.TreatmentSites.ToString();
                            var ProductControlMethod= i.ProductControlMethod;
                             var B_ProductMinUseRate= i.B_ProductMinUseRate;
                             var B_ProductMaxUseRate= i.B_ProductMaxUseRate;
                             var B_ProductMeasurementUnit= i.B_ProductMeasurementUnit;
                             var M_ProductMinUseRate= i.M_ProductMinUseRate;
                             var M_ProductMaxUseRate= i.M_ProductMaxUseRate;
                             var M_ProductMeasurementUnit= i.M_ProductMeasurementUnit;
                           
                        }
                         <a ng-click="EditProduct(@product_id,'@ProductName','@ActiveIngredient','@ProductManufacturer','@ProductUrl','@PhysicalForm','@PesticideClassification',
                             '@ProductControlMethod','@IsSynthetic','@TypeOfLand2','@TypeOfLand','@ProductTreatmentMethod','@TreatmentSites',@B_ProductMinUseRate,@B_ProductMaxUseRate,'@B_ProductMeasurementUnit',
                             @M_ProductMinUseRate,@M_ProductMaxUseRate,'@M_ProductMeasurementUnit')">Edit</a>&nbsp;&nbsp;<a >Delete</a></td>
                </tr>
            }
        </tbody>
    </table>
</div>  

<div id="add-product-modal" tabindex="-1" role="dialog" class="modal fade" >
    <div class="modal-dialog" >
        <div class="modal-content" >
            <div class="modal-header">
                <button type="button" data-dismiss="modal" aria-label="Close" class="close"><span aria-hidden="true">×</span></button>
                <h4 class="modal-title">Add Product Details </h4>
            </div>
            <div class="modal-body">
                <form novalidate="novalidate" name="productForm" class="form-horizontal productForm">
                    @*<div ng-show="productForm.productName.$touched" class="row">
                        <div ng-show="productForm.productName.$error.required" class="col-sm-9 col-sm-offset-3">Please enter product name</div>
                    </div>
                    <div ng-show="productForm.activeIngredient.$touched" class="row">
                        <div ng-show="productForm.activeIngredient.$error.required" class="col-sm-9 col-sm-offset-3">Please enter product name</div>
                    </div>
                    <div ng-show="productForm.manufacturer.$touched" class="row">
                        <div ng-show="productForm.manufacturer.$error.required" class="col-sm-9 col-sm-offset-3">Please enter product name</div>
                    </div>
                    <div ng-show="productForm.manu_url.$touched" class="row">
                        <div ng-show="productForm.manu_url.$error.required" class="col-sm-9 col-sm-offset-3">Please enter product name</div>
                    </div>
                     <div ng-show="productForm.physicalform.$touched" class="row">
                        <div ng-show="productForm.physicalform.$error.required" class="col-sm-9 col-sm-offset-3">Please enter product name</div>
                    </div>*@

                    <div class="form-group row">
                        <label for="productName" class="col-sm-5 control-label text-right">
                            Product Name<span>*</span>
                        </label>
                        <div class="col-sm-7">
                            <input id="productName" type="text" placeholder="Enter product name" ng-model="product_details.ProductName" name="productName" required="required" class="form-control" />
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="activeIngredient" class="col-sm-5 control-label text-right">
                            Active Ingredient<span>*</span>
                        </label>
                        <div class="col-sm-7">
                            <input id="activeIngredient" type="text" placeholder="Enter Active Ingredient" ng-model="product_details.ActiveIngredient" name="activeIngredient" required="required" class="form-control" />
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="manufacturer" class="col-sm-5 control-label text-right">
                            Product Manufacturer<span>*</span>
                        </label>
                        <div class="col-sm-7">
                            <input id="manufacturer" type="text" placeholder="Enter Product Manufacturer" ng-model="product_details.ProductManufacturer" name="manufacturer" required="required" class="form-control" />
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="manu_url" class="col-sm-5 control-label text-right">
                            Manufacturer Url<span>*</span>
                        </label>
                        <div class="col-sm-7">
                            <input id="manu_url" type="text" placeholder="Enter Manufacturer Url" ng-model="product_details.ProductUrl" name="manu_url" required="required" class="form-control" />
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="physicalform" class="col-sm-5 control-label text-right">
                            Physical Form<span>*</span>
                        </label>
                        <div class="col-sm-7">
                            <input id="physicalform" type="text" placeholder="Enter Physical Form" ng-model="product_details.PhysicalForm" name="physicalform" required="required" class="form-control" />
                        </div>
                    </div>
                    <div class="form-group row">
                        <label class="col-sm-5 control-label text-right">
                            Synthetic/Natural<span>*</span>
                        </label>
                        <div class="col-sm-7">
                            <select ng-model="product_details.IsSynthetic" ng-options="SyntheticOption.value as SyntheticOption.optionText for SyntheticOption in SyntheticNatural" required="required" name="synthetic" class="form-control">
                                <option value="">(Pick One Type)</option>
                            </select>
                        </div><span ng-show="productForm.synthetic.$touched &amp;&amp; productForm.synthetic.$invalid">Please select type of use</span>
                    </div>
                    <div class="form-group row">
                        <label class="col-sm-5 control-label text-right">
                           Pesticide Classification<span>*</span>
                        </label>
                        <div class="col-sm-7">
                            <select ng-model="product_details.PesticideClassification" ng-options="PestClassOption.value as PestClassOption.optionText for PestClassOption in TypeOfPestClass" required="required" name="typeOfPestClass" class="form-control">
                                <option value="">(Pick One Type Of Classification)</option>
                            </select>
                        </div><span ng-show="productForm.typeOfPestClass.$touched &amp;&amp; productForm.typeOfPestClass.$invalid">Please select type of use</span>
                    </div>
                    <div class="form-group row">
                        <label class="col-sm-5 control-label text-right">
                            Type of use of land<span>*</span>
                        </label>
                        <div class="col-sm-7">
                            <label style="display: block" ng-repeat="object in TypeOfLand">
                                <input type="checkbox" name="{{object.value}}" id="{{object.value}}" ng-model="object.checked" ng-change="selectedTypeOfLand()">
                                <label for="{{object.value}}">{{object.optionText}}</label>
                            </label>
                        </div>
                        <span ng-show="productForm.tyeOfUse.$touched &amp;&amp; productForm.tyoeOfUse.$invalid">Please select type of use</span>
                    </div>
                     <div ng-if="land_value == 1 " class="form-group row">
                        <div class="form-group row">
                            <label class="col-sm-5 control-label text-right">
                                Type of Urban Treatment Site<span>*</span>
                            </label>
                            <div class="col-sm-7">
                                <label style="display: block" ng-repeat="object in TypeOfUrbanTreatmentSite">
                                    <input type="checkbox" name="{{object.value}}" id="{{object.value}}" ng-model="object.checked" ng-change="selectedUrbanSites()">
                                    <label for="{{object.value}}">{{object.optionText}}</label>
                                </label>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="col-sm-5 control-label text-right">
                                Type of Agricultural Treatment Site<span>*</span>
                            </label>
                            <div class="col-sm-7">
                                <label style="display: block" ng-repeat="object in TypeOfAgricultureTreatmentSite">
                                    <input type="checkbox" name="{{object.value}}" id="{{object.value}}" ng-model="object.checked" ng-change="selectedAgriSites()">
                                    <label for="{{object.value}}">{{object.optionText}}</label>
                                </label>
                            </div>
                        </div>
                    </div>
                    <div ng-if="isurban == 1 " class="form-group row">
                        <label class="col-sm-5 control-label text-right">
                            Type of Urban Treatment Site<span>*</span>
                        </label>
                        <div class="col-sm-7">
                            <label style="display: block" ng-repeat="object in TypeOfUrbanTreatmentSite">
                                <input type="checkbox" name="{{object.value}}" id="{{object.value}}" ng-model="object.checked" ng-change="selectedUrbanSites()">
                                <label for="{{object.value}}">{{object.optionText}}</label>
                            </label>
                        </div>
                        
                    </div>
                    <div ng-if="isagri == 1" class="form-group row">
                        <label class="col-sm-5 control-label text-right">
                            Type of Agricultural Treatment Site<span>*</span>
                        </label>
                        <div class="col-sm-7">
                            <label style="display: block" ng-repeat="object in TypeOfAgricultureTreatmentSite">
                                <input type="checkbox" name="{{object.value}}" id="{{object.value}}" ng-model="object.checked" ng-change="selectedAgriSites()">
                                <label for="{{object.value}}">{{object.optionText}}</label>
                            </label>
                        </div>

                        @*<div class="form-group row">
                            <label class="col-sm-5 control-label text-right">
                                Type of Agricultre Land<span>*</span>
                            </label>
                            <div class="col-sm-7">
                                <select ng-model="product_details.TypeOfAgri" ng-options="typeOfAgriOption.value as typeOfAgriOption.optionText for typeOfAgriOption in TypeOfAgriLand" required="required" name="typeOfAgri" class="form-control">
                                    <option value="">(Pick One Type of Land)</option>
                                </select>
                            </div><span ng-show="productForm.typeOfAgri.$touched &amp;&amp; productForm.typeOfAgri.$invalid">Please select type of use</span>
                        </div>*@
                        <span ng-show="productForm.typeOfAgri.$touched &amp;&amp; productForm.typeOfAgri.$invalid">Please select type of use</span>
                    </div>

                            
                    <div class="form-group row">
                        <label class="col-sm-5 control-label text-right">Type of Control Method<span>*</span></label>
                        <div class="col-sm-7">
                            <select ng-model="product_details.ProductControlMethod" ng-options="optionOfControl.value as optionOfControl.optionText for optionOfControl in TypeOfControlMethod" required="required" name="controlMethod" class="form-control">
                                <option value="">(Pick One Control Method)</option>
                            </select>
                        </div><span ng-show="productForm.controlMethod.$touched &amp;&amp; productForm.controlMethod.$invalid">Please select control Method</span>
                    </div>
                    <div class="form-group row">
                        <label class="col-sm-5 control-label text-right">
                            Type of Treatment Method<span>*</span>
                        </label>
                        <div class="col-sm-7">
                            <label style="display: block" ng-repeat="object in TypeOfTreatmentMethod">
                                <input type="checkbox" name="{{object.value}}" id="{{object.value}}" ng-model="object.checked" ng-change="selectedTreatmentMethod()">
                                <label for="{{object.value}}">{{object.optionText}}</label>
                            </label>
                        </div>
                        
                        <span ng-show="productForm.treatmentStrategy.$touched &amp;&amp; productForm.treatmentStrategy.$invalid">Please select treatment method</span>
                    </div>
                    <div ng-if="isbroadcast == 1" class="form-group row">
                        <div class="form-group row">
                            <label for="b_minUseRate" class="col-sm-5 control-label text-right">
                                Broadcast Minimum Use Rate<span>*</span>
                            </label>
                            <div class="col-sm-7">
                                <input id="b_minUseRate" type="number" placeholder="Enter Minimum Use Rate" ng-model="product_details.B_ProductMinUseRate" required="treatment2 == 1" name="b_minUseRate" ng-pattern="/^[0-9]{1,10}$/" class="form-control" />
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="b_maxUseRate" class="col-sm-5 control-label text-right">
                                Broadcast Maximum Use Rate<span>*</span>
                            </label>
                            <div class="col-sm-7">
                                <input id="b_maxUseRate" type="number" placeholder="Enter Maximum Use Rate" ng-model="product_details.B_ProductMaxUseRate" required="treatment2 == 1" name="b_maxUseRate" ng-pattern="/^[0-9]{1,10}$/" class="form-control" />
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="b_measurementUnitValue" class="col-sm-5 control-label text-right">
                                Broascast Measurement Unit<span>*</span>
                            </label>
                            <div class="col-sm-7">
                                <select ng-model="product_details.B_ProductMeasurementUnit" ng-options="measurementUnit.value as measurementUnit.optionText for measurementUnit in B_TypeOfMeasurementUnit" required="required" name="b_measurementUnitValue" class="form-control">
                                    <option value="">(Pick One Type of Measurement Unit)</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div ng-if="ismound == 1" class="form-group row">
                        <div class="form-group row">
                            <label for="m_minUseRate" class="col-sm-5 control-label text-right">
                                Mound Minimum Use Rate<span>*</span>
                            </label>
                            <div class="col-sm-7">
                                <input id="m_minUseRate" type="number" placeholder="Enter Minimum Use Rate" ng-model="product_details.M_ProductMinUseRate" required="treatment2 == 1" name="m_minUseRate" ng-pattern="/^[0-9]{1,10}$/" class="form-control" />
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="m_maxUseRate" class="col-sm-5 control-label text-right">
                                Mound Maximum Use Rate<span>*</span>
                            </label>
                            <div class="col-sm-7">
                                <input id="m_maxUseRate" type="number" placeholder="Enter Maximum Use Rate" ng-model="product_details.M_ProductMaxUseRate" required="treatment2 == 1" name="m_maxUseRate" ng-pattern="/^[0-9]{1,10}$/" class="form-control" />
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="m_measurementUnitValue" class="col-sm-5 control-label text-right">
                                Mound Measurement Unit<span>*</span>
                            </label>
                            <div class="col-sm-7">
                                <select ng-model="product_details.M_ProductMeasurementUnit" ng-options="measurementUnit.value as measurementUnit.optionText for measurementUnit in M_TypeOfMeasurementUnit" required="required" name="m_measurementUnitValue" class="form-control">
                                    <option value="">(Pick One Type of Measurement Unit)</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div ng-if="treatment2 == 1" class="form-group row">
                        <div class="form-group row">
                            <label for="b_minUseRate" class="col-sm-5 control-label text-right">
                                Broadcast Minimum Use Rate<span>*</span>
                            </label>
                            <div class="col-sm-7">
                                <input id="b_minUseRate" type="number" placeholder="Enter Minimum Use Rate" ng-model="product_details.B_ProductMinUseRate" required="treatment2 == 1" name="b_minUseRate" ng-pattern="/^[0-9]{1,10}$/" class="form-control" />
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="b_maxUseRate" class="col-sm-5 control-label text-right">
                                Broadcast Maximum Use Rate<span>*</span>
                            </label>
                            <div class="col-sm-7">
                                <input id="b_maxUseRate" type="number" placeholder="Enter Maximum Use Rate" ng-model="product_details.B_ProductMaxUseRate" required="treatment2 == 1" name="b_maxUseRate" ng-pattern="/^[0-9]{1,10}$/" class="form-control" />
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="b_measurementUnitValue" class="col-sm-5 control-label text-right">
                                Broascast Measurement Unit<span>*</span>
                            </label>
                            <div class="col-sm-7">
                                <select ng-model="product_details.B_ProductMeasurementUnit" ng-options="measurementUnit.value as measurementUnit.optionText for measurementUnit in B_TypeOfMeasurementUnit" required="required" name="b_measurementUnitValue" class="form-control">
                                    <option value="">(Pick One Type of Measurement Unit)</option>
                                </select>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="m_minUseRate" class="col-sm-5 control-label text-right">
                                Mound Minimum Use Rate<span>*</span>
                            </label>
                            <div class="col-sm-7">
                                <input id="m_minUseRate" type="number" placeholder="Enter Minimum Use Rate" ng-model="product_details.M_ProductMinUseRate" required="treatment2 == 1" name="m_minUseRate" ng-pattern="/^[0-9]{1,10}$/" class="form-control" />
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="m_maxUseRate" class="col-sm-5 control-label text-right">
                                Mound Maximum Use Rate<span>*</span>
                            </label>
                            <div class="col-sm-7">
                                <input id="m_maxUseRate" type="number" placeholder="Enter Maximum Use Rate" ng-model="product_details.M_ProductMaxUseRate" required="treatment2 == 1" name="m_maxUseRate" ng-pattern="/^[0-9]{1,10}$/" class="form-control" />
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="m_measurementUnitValue" class="col-sm-5 control-label text-right">
                                Mound Measurement Unit<span>*</span>
                            </label>
                            <div class="col-sm-7">
                                <select ng-model="product_details.M_ProductMeasurementUnit" ng-options="measurementUnit.value as measurementUnit.optionText for measurementUnit in M_TypeOfMeasurementUnit" required="required" name="m_measurementUnitValue" class="form-control">
                                    <option value="">(Pick One Type of Measurement Unit)</option>
                                </select>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" data-dismiss="modal" class="btn btn-default">Close</button>
                <button id="SubmitProduct" input type="submit" class="btn btn-theme-bg" ng-click="SubmitProduct()">Add Product </button>
            </div>
        </div>
    </div>
</div>


<script type="text/javascript">
    $('document').ready(function () {
        @*if ('@(TempData["Value"])' == 1) {
            $('#product_sucess').toggle();
        }*@
        document.getElementById("AddProduct").onclick = function () {
           

            $('#add-product-modal').modal("show");
        }

        //document.getElementById("EditProduct").onclick = function () {

        //    var y = document.getElementById("EditProduct").value;
        //    alert("inside edit 2");
        //    console.log(y);
            
        //}

        function Editpr(x){
            console.log(x);
            alert("isnide3");
        }
    });

    var polygonManagerApp = angular.module("productManagerApp", []);
    console.log("inside productmaanager")
    polygonManagerApp.controller("productDefaultCtrl", function ($scope,$filter) {
        var $productModal = $("#add-product-modal");

        $scope.TypeOfLand = [
     { value: "urban", optionText: "Urban Land" },
     { value: "agricultural", optionText: "Agricultural Land" }
        ];
        $scope.TypeOfAgriLand = [
     { value: "food", optionText: "Food Producing Land" },
     { value: "nonfood", optionText: "Non Food Producing Land" }
        ];
        

        $scope.TypeOfUrbanTreatmentSite = [
        { value: "home_lawns", optionText: "Home Lawns / Ornamentals" },
        { value: "perimeter", optionText: "Perimeter" },
        { value: "rec", optionText: "Recreational Areas" },
        { value: "right_of_way", optionText: "Right of Way" }
        ];

        $scope.B_TypeOfMeasurementUnit = [
        { value: "lb/acre", optionText: "lb/acre" },
        { value: "sq ft", optionText: "sq ft" }
        ];

        $scope.M_TypeOfMeasurementUnit = [
       { value: "tbsp/mound", optionText: "Tbsp/mound" },
       { value: "tsp/mound", optionText: "tsp/mound" }
        ];

        $scope.TypeOfAgricultureTreatmentSite = [
       { value: "pasture", optionText: "Pasture Land" },
       { value: "poultry", optionText: "Poultry Houses" },
       { value: "crop", optionText: "Crop Areas" },
       { value: "sod", optionText: "Sod / Turf" },
       { value: "nursery_container", optionText: "Nursery Container" },
       { value: "nursery_bb", optionText: "Nursery B & B (Ball & Burlap)" },
       { value: "other", optionText: "Other ( Fences / Rows / Ditches / Out Buildings)" }
        ];

        $scope.TypeOfControlMethod = [
          { value: "bait", optionText: "Bait and Sterilize Queen", explaination: "worker ants send product to queen. Queen eats and then unable to give birth to new ants" },
          { value: "contact", optionText: "Kill by Direct Contact", explaination: "When fire ants have been in contact with the ingredients of products, they are killed" },
        ];

        $scope.SyntheticNatural = [
          { value: "synthetic", optionText: "Synthetic", explaination: "worker ants send product to queen. Queen eats and then unable to give birth to new ants" },
          { value: "natural", optionText: "Natural", explaination: "When fire ants have been in contact with the ingredients of products, they are killed" },
        ];

        $scope.TypeOfPestClass = [
          { value: "unrestricted", optionText: "Unrestricted", explaination: "worker ants send product to queen. Queen eats and then unable to give birth to new ants" },
          { value: "restricted", optionText: "Restricted", explaination: "When fire ants have been in contact with the ingredients of products, they are killed" },
        ];
        $scope.TypeOfTreatmentMethod = [
          { value: "broadcast", optionText: "Broadcast Treatment", explaination: "worker ants send product to queen. Queen eats and then unable to give birth to new ants" },
          { value: "imt", optionText: "Individual Mound Treatment", explaination: "When fire ants have been in contact with the ingredients of products, they are killed" },
        ];
        $scope.product_details = {
            ProductId:0,
            ProductName: "",
            ProductManufacturer: "",
            PhysicalForm: "",
            PesticideClassification: "",
            ProductControlMethod: "",
            ProductTreatmentMethod: [],
            ActiveIngredient: "",
            B_ProductMinUseRate: "",
            B_ProductMaxUseRate: "",
            B_ProductMeasurementUnit: "",
            M_ProductMinUseRate: "",
            M_ProductMaxUseRate: "",
            M_ProductMeasurementUnit: "",
            ProductUrl: "",
            IsSynthetic: "",
            IsSyntheticValue: false,
            UrbanTreatmentSites:[],
            AgriTreatmentSites: [],
            TypeOfLand: [],
            MoundNumber: 0,
            Notes: "",
            TypeOfAgri:""
        };
        $scope.selectedUrbanSites = function () {
            $scope.product_details.UrbanTreatmentSites = $filter('filter')($scope.TypeOfUrbanTreatmentSite, { checked: true });
            console.log($scope.product_details.UrbanTreatmentSites);
        }

        $scope.selectedAgriSites = function () {
            $scope.product_details.AgriTreatmentSites = $filter('filter')($scope.TypeOfAgricultureTreatmentSite, { checked: true });
            console.log($scope.product_details.AgriTreatmentSites);
        }

        $scope.selectedTypeOfLand = function () {
            $scope.land_value = 0; $scope.isagri = 0; $scope.isurban = 0;
            $scope.product_details.TypeOfLand = $filter('filter')($scope.TypeOfLand, { checked: true });
            console.log($scope.product_details.TypeOfLand);
            var i=0;
            if($scope.product_details.TypeOfLand.length==2){
                $scope.land_value=1;
            }
            else
            {
                if ($scope.product_details.TypeOfLand.length != 0) { 
                    if ($scope.product_details.TypeOfLand[0].value == "urban") {
                        $scope.isurban = 1;
                    }
                    else if ($scope.product_details.TypeOfLand[0].value == "agricultural") {

                        $scope.isagri = 1;
                    }
                }
            }

        }
        $scope.selectedTreatmentMethod = function () {
            $scope.treatment2 = 0;
            $scope.isbroadcast = 0;
            $scope.ismound = 0;
            $scope.product_details.ProductTreatmentMethod = $filter('filter')($scope.TypeOfTreatmentMethod, { checked: true });
            console.log($scope.product_details.ProductTreatmentMethod);
            var i=0;
            if($scope.product_details.ProductTreatmentMethod.length==2){
                $scope.treatment2=1;
            }
            else
            {
                console.log($scope.product_details.ProductTreatmentMethod[0]);
                if ($scope.product_details.ProductTreatmentMethod.length != 0) {   //console.log($scope.product_details.ProductTreatmentMethod[0].value);
                    if ($scope.product_details.ProductTreatmentMethod[0].value == "broadcast") {
                        $scope.isbroadcast = 1;
                    }
                    else if ($scope.product_details.ProductTreatmentMethod[0].value == "imt") {
                        
                        $scope.ismound = 1;
                    }
                }
            } 
        }

        $scope.SubmitProduct = function () {
            if ($scope.product_details.IsSynthetic == "synthetic") {
                $scope.product_details.IsSyntheticValue=true;
            }
            console.log(typeof (JSON.stringify($scope.product_details)));
            console.log($scope.product_details);

            $.ajax({
                type: "POST",
                url: '@(Url.Action("AddProduct", "Product"))',
                data: { ProductDetails: JSON.stringify($scope.product_details)},
                success: function (result) {

                    //var TempPolygon = { id: result, geometry: obj.geometry, properties: obj.properties, type: obj.type };
                    //console.log(TempPolygon)
                    //alert(result);

                    //var x = document.getElementById('product_sucess');
                    //console.log(x.style.display);
                    //alert("uh");
                    ////if (x.style.display === 'none') {
                    ////    x.style.display = 'block';
                    ////} else {
                    ////    x.style.display = 'none';
                    ////}
                    
                    location.href = "/Product/ProductIndex";

                },
                error: function (jqXHR, textStatus, errorThrown) {
                    // myfunction();
                    alert("jg" + errorThrown);
                }
             });
        }
        
        $scope.EditProduct=function(product_id,ProductName,ActiveIngredient,ProductManufacturer,ProductUrl,PhysicalForm,PesticideClassification,
                             ProductControlMethod, IsSynthetic, TypeOfLand2, TypeOfLand, ProductTreatmentMethod,TreatmentSites, B_ProductMinUseRate, B_ProductMaxUseRate, B_ProductMeasurementUnit,
                             M_ProductMinUseRate,M_ProductMaxUseRate,M_ProductMeasurementUnit){
            alert("inside edit");
            console.log(product_id, ProductName, ProductManufacturer, PhysicalForm, PesticideClassification, ProductControlMethod);
            $scope.product_details.ProductId = product_id;
            $scope.product_details.ProductName = ProductName;
            $scope.product_details.ActiveIngredient = ActiveIngredient;
            $scope.product_details.ProductManufacturer = ProductManufacturer;
            $scope.product_details.ProductUrl = ProductUrl;
            $scope.product_details.PhysicalForm=PhysicalForm;
            $scope.product_details.PesticideClassification=PesticideClassification;
            $scope.product_details.ProductControlMethod = ProductControlMethod;
            if (IsSynthetic == "Synthetic") {
                $scope.product_details.IsSyntheticValue = true;
                $scope.product_details.IsSynthetic="synthetic"
            }
            else {
                $scope.product_details.IsSyntheticValue = false;
                $scope.product_details.IsSynthetic = "natural"
            }
            if (TypeOfLand2 != "") {
                $scope.product_details.TypeOfLand.push("urban");
                $scope.product_details.TypeOfLand.push("agricultural");
                document.getElementById("urban").checked = true;
                document.getElementById("agricultural").checked = true;
            }
            else {
                
                if (TypeOfLand == "Urban") {
                    $scope.product_details.TypeOfLand.push("urban");
                    document.getElementById("urban").checked = true;
                }
                else {
                    $scope.product_details.TypeOfLand.push("agricultural");
                    document.getElementById("agricultural").checked = true;
                }
            }

            if (ProductTreatmentMethod == "BroadcastMound") {
                
                document.getElementById("broadcast").checked = true;
                document.getElementById("imt").checked = true;
            }
            else {
                if (ProductTreatmentMethod == "Mound") {
                    
                    document.getElementById("imt").checked = true;
                }
                else {
                    
                    document.getElementById("broadcast").checked = true;
                }
            }
            //console.log(TreatmentSites);
            //console.log(JSON.parse(TreatmentSites));
            //console.log(typeof (TreatmentSites));
            $('#add-product-modal').modal("show");
        }
    });
</script>


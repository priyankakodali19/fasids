@model WebApplication3.Models.ViewModel.ProductDataView2
@{
    ViewBag.Title = "ProductUserView";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
        .disclaimer {
    background:  none repeat scroll 0 0;
    background-color: #f2dede;
    border-color: #eed3d7;
    width: 100%;
}
.disclaimer h4 {
    color: #500000;
    font-family: 'Raleway', sans-serif;
    font-size: 14px;
    margin: 0;
    padding: 10px 0;
}
   
</style>

<section class="disclaimer">
        <div class="container">
            <div class="row">
                <div class="col-sm-1">
                    <h4>Disclaimer :</h4>
                </div>
                <div class="col-sm-11">
                    <marquee id="scroll_news">
                        <div onmouseout="document.getElementById('scroll_news').start();" onmouseover="document.getElementById('scroll_news').stop();">
                            <h4>Because of the constantly changing availability of fire ant insecticides, it is virtually impossible to include
                                every product on the market. Mention of a product on this site does not imply an endorsement by Texas A&M AgriLife Extension Service, the Southern Region IPM Center or any cooperating state. Lack of
                                mention does not imply that the product is not an effective fire ant control product.</h4>
                        </div>
                    </marquee>
                </div>
            </div>
        </div>
    </section>
<div class="divide10"></div>
<h2 class="title text-center">FIRE ANT PRODUCTS</h2>
<div>
    <table id="ProductsList" data-toggle="table" class="table table-striped table-bordered table-condensed table-hover">
        <thead id="ProductsThead">
            <tr>
                <th data-field="ActiveIngredient" data-sortable="true"><div>Active</div><div>Ingredient</div> </th>
                <th data-field="ProductName" data-sortable="true"><div>Product</div><div>Name</div> </th>
                <th data-field="ProductManufacturer" data-sortable="true"><div>Product</div><div>Manufacturer</div></th>
                <th data-field="PhysicalForm" data-sortable="false"><div>Physical</div><div>Form</div> </th>
                <th data-field="IsSynthetic" data-sortable="false"><div>Synthetic</div><div>or Natural</div> </th>
                <th data-field="TypeOfControlUsage" data-sortable="false"><div>Control</div><div>Method</div> </th>
                <th data-field="TypeOfTreatmentUsage" data-sortable="false"><div>Treatment</div><div> Method</div> </th>
                <th data-field="TypeOfLand" data-sortable="false"><div>Type of Land</div></th>
                <th data-field="TypeOfTreatmentSite" data-sortable="false"><div>Treatment Sites</div></th>
                <th data-field="ProductCoverage" data-sortable="false"><div>Suggested Product</div><div>Use Rate</div></th>
            </tr>
        </thead>
        <tbody>
    @foreach (var i in Model.Products)
            {
   
                <tr>
                    <td> @Html.DisplayFor(m => i.ActiveIngredient)</td>
                    <td><a href=@Html.DisplayFor(m => i.ProductUrl) target="_blank"> @Html.DisplayFor(m => i.ProductName)</a></td>
                    <td> @Html.DisplayFor(m => i.ProductManufacturer)</td>
                    <td> @Html.DisplayFor(m => i.PhysicalForm)</td>
                    <td> @Html.DisplayFor(m => i.IsSynthetic)</td>
                    <td> @Html.DisplayFor(m => i.ProductControlMethod)</td>
                    <td>
                        <ul>
                            @for (int x = 0; x < i.ProductTreatmentMethod.Count; x++)
                            {
                                <li>@Html.DisplayFor(m => i.ProductTreatmentMethod[x])</li>
                            }
                        </ul>
                    </td>
                    <td> 
                        @if(i.TypeOfLand2.Count==2)
                        {
                            <ul>
                                @for (int x = 0; x < i.TypeOfLand2.Count; x++)
                                {
                                    <li>@Html.DisplayFor(m => i.TypeOfLand2[x])</li>
                                }
                            </ul>
                        }
                        else
                        {
                            @Html.DisplayFor(m => i.TypeOfLand)
                        }
                    </td>
                    <td>
                        <ul>
                            @for (int x = 0; x < i.TreatmentSites.Count;x++  )
                            {
                                <li>@Html.DisplayFor(m => i.TreatmentSites[x])</li>
                            }
                        </ul>
                    </td>
                    <td>
                        <ul>
                            @for (int x = 0; x < i.ProductMeasurementUnit2.Count; x++)
                            {
                                <li>@Html.DisplayFor(m => i.ProductMeasurementUnit2[x])</li>
                            }
                        </ul>   
                    </td>                    
                </tr>
            }
        </tbody>
    </table>
</div>  

<script type="text/javascript">
    $('document').ready(function () {
        $('#ProductsList').each(function () {
            var Column_number_to_Merge = 1;

            // Previous_TD holds the first instance of same td. Initially first TD=null.
            var Previous_TD = null;
            var i = 1;
            $("tbody", this).find('tr').each(function () {
                // find the correct td of the correct column
                // we are considering the table column 1, You can apply on any table column
                var Current_td = $(this).find('td:nth-child(' + Column_number_to_Merge + ')');

                if (Previous_TD == null) {
                    // for first row
                    Previous_TD = Current_td;
                    i = 1;
                }
                else if (Current_td.text() == Previous_TD.text()) {
                    // the current td is identical to the previous row td
                    // remove the current td
                    Current_td.remove();
                    // increment the rowspan attribute of the first row td instance
                    Previous_TD.attr('rowspan', i + 1);
                    i = i + 1;
                }
                else {
                    // means new value found in current td. So initialize counter variable i
                    Previous_TD = Current_td;
                    i = 1;
                }
            });
        });
    });
</script>